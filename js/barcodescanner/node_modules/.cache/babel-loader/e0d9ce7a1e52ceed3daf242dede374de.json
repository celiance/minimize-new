{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\lukas\\\\barcodescanner\\\\src\\\\BarcodeTextField.js\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport Quagga from \"quagga\"; // ES6\n\nimport \"./styles.css\";\nimport axios from \"axios\";\nvar _scannerIsRunning = false;\n\nclass BarcodeTextField extends React.Component {\n  constructor(props) {\n    super(props); // This binding is necessary to make `this` work in the callback\n\n    this.handleSubmit = event => {\n      event.preventDefault();\n      const user = {\n        name: this.state.name\n      };\n      axios.post('https://jsonplaceholder.typicode.com/users', {\n        user\n      }).then(res => {\n        console.log(res);\n        console.log(res.data);\n        window.location = \"/retrieve\"; //This line of code will redirect you once the submission is succeed\n      });\n    };\n\n    this.handleChange = event => {\n      this.setState({\n        name: event.target.value\n      });\n    };\n\n    this.handleClick = this.handleClick.bind(this);\n    this.handleFileSelect = this.handleFileSelect.bind(this);\n  }\n\n  handleClick() {\n    if (_scannerIsRunning) {\n      Quagga.stop();\n    } else {\n      this.startScanner();\n    }\n  }\n\n  startScanner() {\n    Quagga.init({\n      inputStream: {\n        name: \"Live\",\n        type: \"LiveStream\",\n        target: document.querySelector(\"#scanner-container\"),\n        constraints: {\n          width: 480,\n          height: 320,\n          facingMode: \"environment\"\n        }\n      },\n      decoder: {\n        readers: [\"code_128_reader\", \"ean_reader\", \"ean_8_reader\", \"code_39_reader\", \"code_39_vin_reader\", \"codabar_reader\", \"upc_reader\", \"upc_e_reader\", \"i2of5_reader\"],\n        debug: {\n          showCanvas: true,\n          showPatches: true,\n          showFoundPatches: true,\n          showSkeleton: true,\n          showLabels: true,\n          showPatchLabels: true,\n          showRemainingPatchLabels: true,\n          boxFromPatches: {\n            showTransformed: true,\n            showTransformedBox: true,\n            showBB: true\n          }\n        }\n      }\n    }, function (err) {\n      if (err) {\n        alert(\"You need a camera to scan barcodes.\");\n        console.log(err);\n        document.querySelector(\"#scanner-container\").innerHTML = \"\";\n        return;\n      }\n\n      console.log(\"Initialization finished. Ready to start\");\n      Quagga.start(); // Set flag to is running\n      //_scannerIsRunning = true;\n    });\n    Quagga.onProcessed(function (result) {\n      var drawingCtx = Quagga.canvas.ctx.overlay,\n          drawingCanvas = Quagga.canvas.dom.overlay;\n\n      if (result) {\n        if (result.boxes) {\n          drawingCtx.clearRect(0, 0, parseInt(drawingCanvas.getAttribute(\"width\")), parseInt(drawingCanvas.getAttribute(\"height\")));\n          result.boxes.filter(function (box) {\n            return box !== result.box;\n          }).forEach(function (box) {\n            Quagga.ImageDebug.drawPath(box, {\n              x: 0,\n              y: 1\n            }, drawingCtx, {\n              color: \"green\",\n              lineWidth: 2\n            });\n          });\n        }\n\n        if (result.box) {\n          Quagga.ImageDebug.drawPath(result.box, {\n            x: 0,\n            y: 1\n          }, drawingCtx, {\n            color: \"#00F\",\n            lineWidth: 2\n          });\n        }\n\n        if (result.codeResult && result.codeResult.code) {\n          Quagga.ImageDebug.drawPath(result.line, {\n            x: \"x\",\n            y: \"y\"\n          }, drawingCtx, {\n            color: \"red\",\n            lineWidth: 3\n          });\n        }\n      }\n    });\n    Quagga.onDetected(function (result) {\n      Quagga.stop();\n      document.querySelector(\"#text-input\").value = result.codeResult.code;\n      document.querySelector(\"#scanner-container\").innerHTML = \"\";\n      console.log(\"Barcode detected and processed : [\" + result.codeResult.code + \"]\", result);\n    });\n  }\n\n  handleFileSelect(evt) {\n    var files = evt.target.files; // FileList object\n\n    var tmpImgURL = URL.createObjectURL(files[0]);\n    Quagga.decodeSingle({\n      src: tmpImgURL,\n      numOfWorkers: 0,\n      // Needs to be 0 when used within node\n      locate: true,\n      inputStream: {\n        size: 800 // restrict input-size to be 800px in width (long-side)\n\n      },\n      decoder: {\n        readers: [\"code_128_reader\", \"ean_reader\", \"ean_8_reader\", \"code_39_reader\", \"code_39_vin_reader\", \"codabar_reader\", \"upc_reader\", \"upc_e_reader\", \"i2of5_reader\"]\n      }\n    }, function (result) {\n      console.log(result);\n\n      if (result) {\n        if (result.codeResult != null) {\n          document.querySelector(\"#text-input\").value = result.codeResult.code;\n          console.log(\"result\", result.codeResult.code);\n        } else {\n          alert(\"not detected\");\n          document.querySelector(\"#text-input\").value = \"\";\n        }\n      } else {\n        alert(\"not detected\");\n        document.querySelector(\"#text-input\").value = \"\";\n      }\n    });\n  }\n\n  componentDidMount() {\n    document.querySelector(\"#inputId\").addEventListener(\"change\", this.handleFileSelect, false);\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: \"inline-block\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"text-input\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: this.handleClick,\n        children: \" Scan \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \" Add \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"inputId\",\n        type: \"file\",\n        accept: \"image/*\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default BarcodeTextField;","map":{"version":3,"sources":["C:/Users/lukas/barcodescanner/src/BarcodeTextField.js"],"names":["React","ReactDOM","Quagga","axios","_scannerIsRunning","BarcodeTextField","Component","constructor","props","handleSubmit","event","preventDefault","user","name","state","post","then","res","console","log","data","window","location","handleChange","setState","target","value","handleClick","bind","handleFileSelect","stop","startScanner","init","inputStream","type","document","querySelector","constraints","width","height","facingMode","decoder","readers","debug","showCanvas","showPatches","showFoundPatches","showSkeleton","showLabels","showPatchLabels","showRemainingPatchLabels","boxFromPatches","showTransformed","showTransformedBox","showBB","err","alert","innerHTML","start","onProcessed","result","drawingCtx","canvas","ctx","overlay","drawingCanvas","dom","boxes","clearRect","parseInt","getAttribute","filter","box","forEach","ImageDebug","drawPath","x","y","color","lineWidth","codeResult","code","line","onDetected","evt","files","tmpImgURL","URL","createObjectURL","decodeSingle","src","numOfWorkers","locate","size","componentDidMount","addEventListener","render","display"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport Quagga from \"quagga\"; // ES6\r\nimport \"./styles.css\";\r\nimport axios from \"axios\";\r\n\r\nvar _scannerIsRunning = false;\r\n\r\nclass BarcodeTextField extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    // This binding is necessary to make `this` work in the callback\r\n    this.handleClick = this.handleClick.bind(this);\r\n    this.handleFileSelect = this.handleFileSelect.bind(this);\r\n  }\r\n\r\n  handleClick() {\r\n    if (_scannerIsRunning) {\r\n      Quagga.stop();\r\n    } else {\r\n      this.startScanner();\r\n    }\r\n  }\r\n\r\n  startScanner() {\r\n    Quagga.init(\r\n      {\r\n        inputStream: {\r\n          name: \"Live\",\r\n          type: \"LiveStream\",\r\n          target: document.querySelector(\"#scanner-container\"),\r\n          constraints: {\r\n            width: 480,\r\n            height: 320,\r\n            facingMode: \"environment\"\r\n          }\r\n        },\r\n        decoder: {\r\n          readers: [\r\n            \"code_128_reader\",\r\n            \"ean_reader\",\r\n            \"ean_8_reader\",\r\n            \"code_39_reader\",\r\n            \"code_39_vin_reader\",\r\n            \"codabar_reader\",\r\n            \"upc_reader\",\r\n            \"upc_e_reader\",\r\n            \"i2of5_reader\"\r\n          ],\r\n          debug: {\r\n            showCanvas: true,\r\n            showPatches: true,\r\n            showFoundPatches: true,\r\n            showSkeleton: true,\r\n            showLabels: true,\r\n            showPatchLabels: true,\r\n            showRemainingPatchLabels: true,\r\n            boxFromPatches: {\r\n              showTransformed: true,\r\n              showTransformedBox: true,\r\n              showBB: true\r\n            }\r\n          }\r\n        }\r\n      },\r\n      function(err) {\r\n        if (err) {\r\n          alert(\"You need a camera to scan barcodes.\");\r\n          console.log(err);\r\n          document.querySelector(\"#scanner-container\").innerHTML = \"\";\r\n\r\n          return;\r\n        }\r\n\r\n        console.log(\"Initialization finished. Ready to start\");\r\n        Quagga.start();\r\n\r\n        // Set flag to is running\r\n        //_scannerIsRunning = true;\r\n      }\r\n    );\r\n\r\n    Quagga.onProcessed(function(result) {\r\n      var drawingCtx = Quagga.canvas.ctx.overlay,\r\n        drawingCanvas = Quagga.canvas.dom.overlay;\r\n\r\n      if (result) {\r\n        if (result.boxes) {\r\n          drawingCtx.clearRect(\r\n            0,\r\n            0,\r\n            parseInt(drawingCanvas.getAttribute(\"width\")),\r\n            parseInt(drawingCanvas.getAttribute(\"height\"))\r\n          );\r\n          result.boxes\r\n            .filter(function(box) {\r\n              return box !== result.box;\r\n            })\r\n            .forEach(function(box) {\r\n              Quagga.ImageDebug.drawPath(box, { x: 0, y: 1 }, drawingCtx, {\r\n                color: \"green\",\r\n                lineWidth: 2\r\n              });\r\n            });\r\n        }\r\n\r\n        if (result.box) {\r\n          Quagga.ImageDebug.drawPath(result.box, { x: 0, y: 1 }, drawingCtx, {\r\n            color: \"#00F\",\r\n            lineWidth: 2\r\n          });\r\n        }\r\n\r\n        if (result.codeResult && result.codeResult.code) {\r\n          Quagga.ImageDebug.drawPath(\r\n            result.line,\r\n            { x: \"x\", y: \"y\" },\r\n            drawingCtx,\r\n            { color: \"red\", lineWidth: 3 }\r\n          );\r\n        }\r\n      }\r\n    });\r\n\r\n    Quagga.onDetected(function(result) {\r\n      Quagga.stop();\r\n      document.querySelector(\"#text-input\").value = result.codeResult.code;\r\n      document.querySelector(\"#scanner-container\").innerHTML = \"\";\r\n      console.log(\r\n        \"Barcode detected and processed : [\" + result.codeResult.code + \"]\",\r\n        result\r\n      );\r\n    });\r\n  }\r\n\r\n  handleFileSelect(evt) {\r\n    var files = evt.target.files; // FileList object\r\n\r\n    var tmpImgURL = URL.createObjectURL(files[0]);\r\n\r\n    Quagga.decodeSingle(\r\n      {\r\n        src: tmpImgURL,\r\n        numOfWorkers: 0, // Needs to be 0 when used within node\r\n        locate: true,\r\n        inputStream: {\r\n          size: 800 // restrict input-size to be 800px in width (long-side)\r\n        },\r\n        decoder: {\r\n          readers: [\r\n            \"code_128_reader\",\r\n            \"ean_reader\",\r\n            \"ean_8_reader\",\r\n            \"code_39_reader\",\r\n            \"code_39_vin_reader\",\r\n            \"codabar_reader\",\r\n            \"upc_reader\",\r\n            \"upc_e_reader\",\r\n            \"i2of5_reader\"\r\n          ]\r\n        }\r\n      },\r\n      function(result) {\r\n        console.log(result);\r\n        if (result) {\r\n          if (result.codeResult != null) {\r\n            document.querySelector(\"#text-input\").value =\r\n              result.codeResult.code;\r\n            console.log(\"result\", result.codeResult.code);\r\n          } else {\r\n            alert(\"not detected\");\r\n            document.querySelector(\"#text-input\").value = \"\";\r\n          }\r\n        } else {\r\n          alert(\"not detected\");\r\n          document.querySelector(\"#text-input\").value = \"\";\r\n        }\r\n      }\r\n    );\r\n  }\r\n\r\n  componentDidMount() {\r\n    document\r\n      .querySelector(\"#inputId\")\r\n      .addEventListener(\"change\", this.handleFileSelect, false);\r\n  }\r\n\r\n  handleSubmit = event => {\r\n      event.preventDefault();\r\n      const user = {\r\n        name: this.state.name\r\n      }\r\n      axios.post('https://jsonplaceholder.typicode.com/users', { user })\r\n        .then(res=>{\r\n          console.log(res);\r\n          console.log(res.data);\r\n          window.location = \"/retrieve\" //This line of code will redirect you once the submission is succeed\r\n        })\r\n    }\r\n  handleChange = event =>{\r\n      this.setState({ name: event.target.value});\r\n    }\r\n\r\n  render() {\r\n    return (\r\n      <div style={{ display: \"inline-block\" }}>\r\n        <input type=\"text\" id=\"text-input\" />\r\n        <button onClick={this.handleClick}> Scan </button>\r\n        <button type = \"submit\"> Add </button>\r\n        <input id=\"inputId\" type=\"file\" accept=\"image/*\" />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default BarcodeTextField;\r\n"]},"metadata":{},"sourceType":"module"}